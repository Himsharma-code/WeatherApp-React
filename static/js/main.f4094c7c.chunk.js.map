{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","data","console","log","catch","err","message","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","src","icon","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAEMA,EACC,mCA0GQC,MAvGf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAmDA,OACE,qBACEC,UACyB,oBAAhBF,EAAQG,MACXH,EAAQG,KAAKC,KAAO,GAClB,WAEF,MANR,SASE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACnCA,MAAOZ,EACPa,WApEV,SAAgBH,GACA,UAAVA,EAAEI,KACJC,MAAM,qDAAD,OACkDf,EADlD,+BAC8EH,IAEhFmB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAIL,OAHAC,QAAQC,IAAIF,GACZhB,EAAWgB,GACXlB,EAAS,IACFkB,KAERG,OAAM,SAACC,GACNH,QAAQC,IAAIE,EAAIC,iBA0DM,oBAAhBtB,EAAQG,KACd,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGF,EAAQuB,KADX,KACmBvB,EAAQwB,IAAIC,WAE/B,qBAAKvB,UAAU,OAAf,SA5DZ,SAAqBwB,GACnB,IAwBIC,EAVO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAGaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EA1BS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAciBL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA8BDE,CAAY,IAAIC,WAEzC,sBAAKlC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBmC,KAAKC,MAAMtC,EAAQG,KAAKC,MAA/C,YACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,UAE/C,qBAAKD,UAAU,MAAf,SAEI,qBACEqC,IAAG,2CAAsCvC,EAAQA,QAAQ,GAAGwC,KAAzD,WACHC,IAAI,aAMZ,SCjGVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f4094c7c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst api = {\n  key: \"24d83e9576f6f16ff4328b52a0b400af\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  function search(e) {\n    if (e.key === \"Enter\") {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${api.key}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          setWeather(data);\n          setQuery(\"\");\n          return data;\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n  }\n  function dateBuilder(d) {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  }\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 20\n            ? \"app warm\"\n            : \"app\"\n          : \"app\"\n      }\n    >\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"search by city\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}Â°c </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n            <div className=\"img\">\n              {\n                <img\n                  src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                  alt=\"img\"\n                ></img>\n              }\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}